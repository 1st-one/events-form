$color-bg-intro: linear-gradient(111.78deg, #000B32 6.74%, #000517 91.78%);
$color-dark: #000C37;
$color-white: #FFFFFF;
$color-blue: #0088FF;
$color-input: #E0E4EC;
$color-white-opacity: rgba(255, 255, 255, 0.1);
$color-disabled: #EFF1F6;
$color-icon: #C9CFDB;
$color-grey: #9EA9B9;
$accent: #0088FFFF;

@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap');

@font-face {
  font-family: SF Pro Text;
  src: url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');
  font-weight: bold;
}

body {
  font-family: Montserrat, sans-serif !important;
  height: 100vh;
}

.container {
  max-width: 1200px;
  padding: 0 15px;
  margin: 100px auto;
}

$grid-breakpoints: (
        xs: 0,
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px,
        xxl: 1400px
);

// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  box-sizing: border-box;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}
body {
  line-height: 1;
}
ol, ul {
  list-style: none;
}
blockquote, q {
  quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
a {
  text-decoration: none;

  &:hover {
    text-decoration: none;
  }
}

pre,
code,
kbd,
samp {
  font-family: SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;
}


@mixin h1 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 48px;
  line-height: 60px;

  @include media-breakpoint-down(lg) {
    font-size: 48px;
  }

  @include media-breakpoint-down(md) {
    font-size: 44px;
    line-height: 54px;
  }

  @include media-breakpoint-down(xs) {
    font-size: 24px;
    line-height: 34px;
  }
}

@mixin h2 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 36px;
  line-height: 48px;

  @include media-breakpoint-down(md) {
    font-size: 32px;
    line-height: 42px;
  }

  @include media-breakpoint-down(xs) {
    font-size: 22px;
    line-height: 32px;
  }
}

@mixin h2_v2 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 40px;
  line-height: 100%;
  margin-bottom: 32px;

  @include media-breakpoint-down(md) {
    font-size: 36px;
    margin-bottom: 24px;
  }

  @include media-breakpoint-down(xs) {
    font-size: 32px;
  }
}

@mixin h2_v3 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 36px;
  line-height: 140%;

  @include media-breakpoint-down(md) {
    font-size: 32px;
    line-height: 130%;
  }

  @include media-breakpoint-down(xs) {
    font-size: 24px;
    line-height: 160%;
  }
}

@mixin h3 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 20px;
  line-height: 30px;

  @include media-breakpoint-down(xs) {
    font-size: 18px;
    line-height: 28px;
  }
}

@mixin h3_v2 {
  color: $color-dark;
  font-style: normal;
  font-weight: 500;
  font-size: 19px;
  line-height: 26px;

  @include media-breakpoint-down(xs) {
    font-size: 17px;
    line-height: 24px;
  }
}

@mixin h3_v3 {
  color: $color-dark;
  font-style: normal;
  font-weight: 500;
  font-size: 21px;
  line-height: 28px;

  @include media-breakpoint-down(xs) {
    font-size: 17px;
    line-height: 24px;
  }
}

@mixin h4 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 18px;
  line-height: 28px;

  @include media-breakpoint-down(xs) {
    font-size: 16px;
    line-height: 28px;
  }
}

@mixin h4_v2 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 32px;
  line-height: 160%;

  @include media-breakpoint-down(sm) {
    font-size: 28px;
  }

  @include media-breakpoint-down(xs) {
    font-size: 24px;
  }
}

@mixin body1 {
  color: $color-dark;
  font-style: normal;
  font-weight: 500;
  font-size: 16px;
  line-height: 26px;

  @include media-breakpoint-down(xs) {
    font-size: 14px;
    line-height: 22px;
  }
}

@mixin body2 {
  color: $color-dark;
  font-style: normal;
  font-weight: 500;
  font-size: 14px;
  line-height: 22px;
}

@mixin body3 {
  color: $color-dark;
  font-style: normal;
  font-weight: 500;
  font-size: 12px;
  line-height: 20px;
}

@mixin body4 {
  color: $color-dark;
  font-style: normal;
  font-weight: normal;
  font-size: 14px;
  line-height: 22px;
}

@mixin body5 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 16px;
  line-height: 26px;
}

@mixin body6 {
  color: $color-dark;
  font-style: normal;
  font-weight: 600;
  font-size: 14px;
  line-height: 22px
}

@mixin body7 {
  color: $color-dark;
  font-style: normal;
  font-weight: normal;
  font-size: 16px;
  line-height: 26px;
}

@mixin body8 {
  font-style: normal;
  font-weight: normal;
  font-size: 15px;
  line-height: 22px;
}

@mixin body9 {
  font-style: normal;
  font-weight: normal;
  font-size: 13px;
  line-height: 20px;
}

@mixin placeholder() {
  font-size: 14px;
  font-weight: 400;
  line-height: 22px;
  color: $color-grey;
}

.highlighted {
  color: $accent;
}

.link {
  color: $accent;
}


@mixin mediaMixin($minMax, $width) {
  @media only screen and (#{$minMax}-width: #{$width}px) { @content }
}

.input {
  position: relative;
  display: flex;
  flex-direction: column;

  &__label {
    font-weight: bold;
    font-size: 10px;
    line-height: 12px;
    letter-spacing: 0.06em;
    text-transform: uppercase;

    margin-bottom: 8px;

    color: #000c37;
  }

  &__body {
    position: relative;

    background: #ffffff;
    height: 50px;

    padding: 0 16px;

    outline: none;
    border: 1px solid #e0e4ec;
    box-sizing: border-box;
    border-radius: 6px;

    font-size: 14px;
    line-height: 20px;
    letter-spacing: 0.02em;
    font-family: Montserrat, sans-serif;

    transition: 0.3s 0s;

    &-eye {
      position: absolute;
      width: 35px;

      cursor: pointer;

      right: 10px;
      top: 50%;
      transform: translateY(-50%);

      padding: 5px;

      img {
        width: 100%;
      }
    }

    &:active {
      border: 1px solid $accent;
      box-shadow: 0 10px 30px rgba(58, 112, 191, 0.15);
    }

    &:hover {
      border: 1px solid $accent;
    }

    &::placeholder {
      color: #9ea9b9;
    }

    &--error {
      border: 1px solid #f52c5c !important;
      color: #f52c5c !important;

      &::placeholder {
        color: #f52c5c !important;
      }
    }

    &--select {
      color: #9ea9b9;
      appearance: none !important;
    }
  }

  &__error {
    position: absolute;
    top: calc(100%);
    left: 0;

    letter-spacing: 0.06em;
    font-family: 'SF Pro Text', sans-serif;

    color: #f52c5c;

    font-weight: bold;
    font-size: 10px;
    line-height: 12px;
  }

  &__textarea {
    position: relative;
    font-family: inherit;

    background: #ffffff;
    padding: 16px;

    outline: none;
    border: 1px solid #e0e4ec;
    box-sizing: border-box;
    border-radius: 6px;

    font-size: 14px;
    line-height: 20px;
    letter-spacing: 0.02em;

    resize: none;
    height: 140px;

    transition: 0.3s 0s;

    &--error {
      border: 1px solid #f52c5c !important;

      &::placeholder {
        color: #f52c5c !important;
      }
    }

    &:active {
      border: 1px solid $accent;
      box-shadow: 0 10px 30px rgba(58, 112, 191, 0.15);
    }

    &:hover {
      border: 1px solid $accent;
    }

    &::placeholder {
      color: #9ea9b9;
    }
  }
}

@include media-breakpoint-down(md) {
  .input {

    &-textarea {
      height: 106px;
    }
  }
}

.select {
  $select: &;
  position: relative;

  &__panel {
    $panel: &;
    position: relative;

    background: #ffffff;
    height: 50px;

    border: 1px solid #e0e4ec;
    box-sizing: border-box;
    border-radius: 6px;

    padding: 0 16px;
    cursor: pointer;

    display: flex;
    align-items: center;
    justify-content: space-between;
    color: #9ea9b9;

    transition: 0.3s 0s;

    &-text {
      font-size: 14px;
      line-height: 20px;
      letter-spacing: 0.02em;

      user-select: none;
    }

    &-svg {
      fill: #c9cfdb;
      transition: 0.2s 0s ease-out;

      &--active {
        fill: #0139ff;
        transform: rotate(-180deg);
      }
    }

    &-number {
      width: 48px;
      margin-left: 4px;

      font-size: 14px;
      line-height: 20px;

      margin-right: 3px;
      user-select: none;
      transition: .3s 0s;

      &--fill {
        color: $color-dark;
      }
    }

    &--active {
      fill: #fff;
      border: 1px solid $accent;
      box-shadow: 0 10px 30px rgba(58, 112, 191, 0.15);
    }

    &--error {
      border: 1px solid #f52c5c !important;
      color: #f52c5c !important;

      #{$panel} {
        &-text {
          color: #f52c5c !important;
        }
      }
    }

    &--phone {
      padding-right: 0;
    }

    &:active {
      border: 1px solid $accent;
      box-shadow: 0 10px 30px rgba(58, 112, 191, 0.15);
    }

    &:hover {
      border: 1px solid $accent;
    }
  }

  &__wrapper {
    z-index: 2;
    position: absolute;
    top: calc(100% + 4px);
    left: 0;

    height: auto;
    overflow: auto;

    width: 100%;
    //transition: 0.25s 0s ease-out;

    background: #ffffff;
    box-shadow: 0 4px 15px rgba(58, 112, 191, 0.1);
    border-radius: 6px;

    &-content {
      margin: 0;
      padding: 4px;
      display: none;

      list-style: none;

      .flag-icon {
        margin-right: 8px;
      }
    }
  }

  &__country,
  &__item {
    padding: 15px 16px;
    border-radius: 6px;

    font-size: 14px;
    line-height: 20px;
    letter-spacing: 0.02em;
    user-select: none;

    cursor: pointer;
    color: $color-dark;
    transition: 0.25s 0s;

    &--hover {
      background: #f2f9ff;
    }

    &--active,
    &:hover {
      color: #0088ff;
      background: #f2f9ff;
    }
  }

  &__country {
    padding: 11px 16px;

    &-name {
      margin: 0 8px 0 13px;
      color: #000c37;
    }

    &-iso {
      color: #6e7e92;
    }
  }

  &__input {
    width: 100%;
    height: 100%;

    border: none;
    outline: none;
    padding: 0 16px;
    color: #000c37;

    font-size: 14px;
    line-height: 20px;

    border-radius: 6px;
    font-family: Montserrat, sans-serif;

    &--phone {
      position: relative;
      box-sizing: border-box;
      background: transparent;

      z-index: 1;
    }

    &::placeholder {
      color: #9ea9b9;
    }

    &[readonly] {
      color: #9ea9b9;
    }
  }

  &__phone {
    display: flex;
    align-items: center;

    padding: 5px 12px 5px 0;
    border-right: 1px solid #e0e4ec;

    &-wrapper {
      position: relative;
      height: 100%;
    }
  }

  &__mask {
    position: absolute;
    z-index: 0;

    top: 50%;
    left: 16px;

    font-size: 14px;

    transform: translateY(-50%);

    span {

      &.hide {
        opacity: 0;
        visibility: visible;
      }
    }
  }

  &--autocomplate {

    #{$select} {

      &__panel {
        border: 1px solid transparent;
        padding: 0;

        &-text {
          @include body1;
          border: none;

          width: 100%;
          height: 100%;

          box-sizing: border-box;
          outline: none;
          border-radius: 5px;

          padding-left: 50px;

          &::placeholder {
            color: $color-grey;
          }
        }

        &-image {
          position: absolute;

          img {
            margin-left: 20px;
          }

          .flag-icon {
            width: 20px;
            margin-left: 16px;
          }
        }

        &--active {
          border-color: $accent;
        }
      }

      &__item {
        padding: 8px 12px;

        &.no-hover {
          background: #ffffff !important;
          color: $color-dark !important;
        }
      }
    }
  }
}

.form-section {
  //background-image: url("");
  background-size: cover;
  padding: 120px 0 135px;

  @include mediaMixin(max, 576) {
    padding: 64px 0 80px;
  }

  &__content {

  }

  &__main-box {
    background: $color-white-opacity;
    border: 1px solid $color-white-opacity;
    border-radius: 16px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #000C37;

    @include mediaMixin(max, 998) {
      justify-content: center;
      min-height: 474px;
    }
  }

  &__image-box {
    flex: 0 0 27%;
    padding: 15px;

    @include mediaMixin(max, 998) {
      display: none;
    }
  }

  &__image {
    display: inline-block;
    border-radius: 16px 20% 16px 16px;
    max-width: 425px;
  }

  &__form-content-box {
    flex: 0 0 57%;

    @include mediaMixin(max, 998) {
      flex: 0 0 100%;
      padding: 84px 0 56px;
    }

    @include mediaMixin(max, 576) {
      padding: 60px 0 24px;
    }
  }

  &__form-content-box-header {
    margin-bottom: 25px;
  }

  &__form-title-h3 {
    @include h3;
    font-size: 24px;
    color: $color-white;
    font-weight: 600;
    position: relative;

    @include mediaMixin(max, 998) {
      padding-left: 60px;
    }
  }

  &__vector {
    position: absolute;
  }

  &__vector-1 {
    top: -5px;
    left: -30px;
    transform: translate(-50%, -50%);

    @include mediaMixin(max, 998) {
      top: -35px;
      left: 35px;
    }

    @include mediaMixin(max, 576) {
      top: -25px;
    }
  }

  &__vector-2 {
    bottom: -30px;
    right: 10%;
    transform: translate(0, 0);

    @include mediaMixin(max, 576) {
      right: 8%;
    }
  }

  &__disclamer-box {
    margin-top: 120px;
  }

  &__disclamer-title-h3 {
    @include h3;
    color: $color-white;
    font-size: 24px;
    margin-bottom: 24px;
  }

  &__disclamer-content {
    display: flex;
    justify-content: start;
    flex-wrap: wrap;
  }

  &__text {
    font-size: 14px;
    color: $color-input;
    font-weight: 400;
    max-width: 400px;
    line-height: 22px;
    flex: 0 0 45%;
    margin-bottom: 24px;

    @include mediaMixin(max, 576) {
      flex: 0 0 100%;
    }
  }

  &__text:first-child {
    margin-right: 68px;

    @include mediaMixin(max, 998) {
      margin-right: 30px;
    }
  }
}

.demo-form {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  padding-right: 64px;

  @include mediaMixin(max, 998) {
    padding: 0 30px;
    width: 100%;
  }

  label {
    position: relative;
    width: auto;
  }

  label[for=firstName]:after,
  label[for=lastName]:after,
  label[for=number]:after,
  label[for=email]:after {
    content: "*";
    color: #f52c5c;
    font-size: 16px;
    position: absolute;
    left: -4px;
    transform: translate(-50%, -50%);
  }

  .select__phone {
    border-right: 1px solid $color-grey;
  }

  .select__panel--phone {
    border: 1px solid $color-grey;

    &:hover {
      border: 1px solid #08f;
      cursor: pointer;
    }

    &:focus {
      border: 1px solid #08f;
    }
  }

  .select__panel {
    background: transparent;
    border: 1px solid $color-grey;

    &:hover,
    &:focus {
      border: 1px solid #08f;
    }
  }

  .input {
    flex: 0 0 48%;
    margin-bottom: 45px;

    @include mediaMixin(max, 576) {
      flex: 0 0 100%;
      margin-bottom: 40px;
    }
  }

  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  input:-webkit-autofill:active {
    transition: background-color 5000s ease-in-out 0s;
    -webkit-text-fill-color: white;
  }

  .input__body {
    background: transparent;
    border: 1px solid $color-grey;
    color: $color-white;
    transition: border .3s linear;

    &:hover {
      border: 1px solid #08f;
      cursor: pointer;
    }

    &:focus {
      border: 1px solid #08f;
    }
  }

  .input__label {
    font-weight: 700;
    color: $color-white;
    margin-bottom: 8px;
  }

  .select__panel--phone {
    background: transparent;
  }

  .select__panel-number--fill {
    color: $color-white;
  }

  .select__input {
    background: transparent;
    color: $color-white;
    padding: 0 16px;
  }

  .input__textarea {
    background: transparent;
    color: $color-white;
    border: 1px solid $color-grey;

    &:focus {
      border: 1px solid #08f;
    }
  }

  &__button-wrapper {
    flex: 0 0 100%;
    display: flex;
    justify-content: end;

    @include mediaMixin(max, 576) {
      justify-content: center;
    }
  }

  &__button {
    position: relative;
    padding: 10px 60px;
    font-size: 16px;
    color: $color-white;
    font-weight: 500;
    background: $color-blue;
    border-radius: 6px;
    outline: none;
    border: none;

    @include mediaMixin(max, 576) {
      width: 100%;
      max-width: 285px;
    }
  }

  &__loader {
    left: 15px;
    top: 15%;
    position: absolute;
    height: 25px;
    width: 25px;
    margin-left: 10px;
    border-radius: 50%;
    border-top: 2px solid #fff;
    border-right: 2px solid transparent;
    animation: spinner 1s linear infinite;
  }
}

@keyframes spinner {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}

